<nav class="navbar navbar-expand-md bg-body-light border-bottom sticky-top ">

    <div class="container-fluid">
        <a class="navbar-brand" href="/listings"><i class="fa-solid fa-compass"></i></a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavAltMarkup">

            <span class="navbar-toggler-icon"></span>
        </button>


        <div class="collapse navbar-collapse" id="navbarNavAltMarkup">
            <div class="navbar-nav">

                <a class="nav-link" href="/listings">Explore</a>

            </div>

            <div class="navbar-nav ms-auto">
                <!-- <form class="d-flex search-container" role="search">
                    <input class="form-control me-2" id="searchInput" type="text" placeholder="Search Rooms" aria-label="Search">
                    <button class="btn btn-outline-success" type="submit">Search</button>
                </form> -->
                <form id="searchForm">
                    <div class="search-container">
                        <input type="text" id="searchInput" name="searchInput" placeholder="Search here...">
                        <div class="suggestions-dropdown" id="suggestions"></div>
                    </div>
                </form>

            </div>

            <div class="navbar-nav ms-auto">
                <a class="nav-link" href="/listings/new">Airbnb your home</a>
                <% if (!currUser) { %>
                    <a href="/signup" class="nav-link"><b>Sign Up</b></a>
                    <a href="/login" class="nav-link"><b>Login</b></a>
                    <% } %>
                        <% if (currUser) { %>
                            <a href="/logout" class="nav-link"><b>Log Out</b></a>
                            <% } %>

            </div>
        </div>

    </div>
</nav>



<!-- search box js -->
<script>
    const searchInput = document.getElementById('searchInput');
    const suggestionsDropdown = document.getElementById('suggestions');
    
    let typingTimer;

    searchInput.addEventListener('input', function (event) {
        const searchTerm = event.target.value.trim();

        clearTimeout(typingTimer);
        if (searchTerm) {
            typingTimer = setTimeout(async () => {
                try {
                    const response = await fetch(`/search?q=${searchTerm}`);
                    const result = await response.json();

                    displaySuggestions(result);
                } catch (error) {
                    console.error('Error fetching search results:', error);
                }
            }, 300); // Set a small delay (300ms) to avoid frequent API calls while typing
        } else {
            suggestionsDropdown.style.display = 'none'; // Hide suggestions if search input is empty
        }
    });

    function displaySuggestions(result) {
        suggestionsDropdown.innerHTML = ''; // Clear previous suggestions
        result.forEach(card => {
            const suggestion = document.createElement('div');
            suggestion.classList.add('suggestion');
            suggestion.textContent = card.title;

            suggestion.addEventListener('click', async () => {
                searchInput.value = card.title; // Set the selected suggestion in the input field
                suggestionsDropdown.style.display = 'none'; // Hide suggestions on selection

                // Perform search with the selected suggestion
                try {
                    const response = await fetch(`/search?q=${card.title}`);
                    const searchResult = await response.json();

                    // Redirect to the page related to the selected suggestion
                    window.location.href = `/listings/${encodeURIComponent(card._id)}`;
                
        } catch (error) {
            console.error('Error fetching search results:', error);
        }
    });

    suggestionsDropdown.appendChild(suggestion);
        });

    if (result.length > 0) {
        suggestionsDropdown.style.display = 'block'; // Show the suggestions dropdown
    } else {
        suggestionsDropdown.style.display = 'none'; // Hide if there are no suggestions
    }
    }

    // Close suggestions when clicking outside the dropdown
    document.addEventListener('click', function (event) {
        if (!event.target.closest('.search-container')) {
            suggestionsDropdown.style.display = 'none';
        }
    });

</script>