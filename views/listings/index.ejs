<% layout("/layouts/boilerplate") %>


  <div class="" id="filters">

    <div class="filter-wrapper">


      <div class="filter" onclick="filterByType('Rooms')">
        <div><i class="fa-solid fa-fire"></i></div>
        <p>Trending</p>
      </div>

      <div class="filter" onclick="filterByType('Rooms')">
        <div><i class="fa-solid fa-bed"></i></div>
        <p>Rooms</p>
      </div>

      <div class="filter" onclick="filterByType('Iconic Cities')">
        <div><i class="fa-solid fa-mountain-city"></i></div>
        <p>Iconic Cities</p>
      </div>

      <div class="filter" onclick="filterByType('Mountain')">
        <div><i class="fa-solid fa-mountain"></i></div>
        <p>Mountain</p>
      </div>

      <div class="filter" onclick="filterByType('Castles')">
        <div><i class="fa-brands fa-fort-awesome"></i></div>
        <p>Castles</p>
      </div>

      <div class="filter" onclick="filterByType('Amazing pools')">
        <div><i class="fa-solid fa-person-swimming"></i></div>
        <p>Amazing pools</p>
      </div>

      <div class="filter" onclick="filterByType('Farms')">
        <div><i class="fa-solid fa-cow"></i></div>
        <p>Farms</p>
      </div>

      <div class="filter" onclick="filterByType('Camping')">
        <div><i class="fa-solid fa-tents"></i></div>
        <p>Camping</p>
      </div>

      <div class="filter" onclick="filterByType('Arctic')">
        <div><i class="fa-regular fa-snowflake"></i></div>
        <p>Arctic</p>
      </div>

      <div class="filter" onclick="filterByType('Beach')">
        <div><i class="fa-solid fa-umbrella-beach"></i></div>
        <p>Beach</p>
      </div>

      <div class="filter" onclick="filterByType('Arctic')">
        <div><i class="fa-regular fa-snowflake"></i></div>
        <p>Arctic</p>
      </div>

      <div class="filter" onclick="filterByType('Beach')">
        <div><i class="fa-solid fa-umbrella-beach"></i></div>
        <p>Beach</p>
      </div>




    </div>


    <div><button id="filterButton"><i class="fa-solid fa-arrow-down-wide-short"></i> Filters</button></div>
    <!-- Filter popup -->
    <div class="filter-popup" id="filterPopup">
      <div class="filter-content" id="filterContent">
        <!-- Location options with checkboxes will be displayed here -->
      </div>
      <button id="submitFilter">Submit</button>
    </div>



    <div class="tax-toggle">
      <div class="form-check-reverse form-switch">
        <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckDefault">
        <label class="form-check-label" for="flexSwitchCheckDefault">Display total after taxes</label>
      </div>
    </div>

  </div>





  <div class="row row-cols-lg-4 row-cols-md-3 row-cols-sm-1 mt-3">
    <% let filteredListings=selectedLocations ? allListings.filter(listing=>
      selectedLocations.includes(listing.location))
      : allListings;

      // Check for type filtering
      filteredListings = type ? filteredListings.filter(listing => type.includes(listing.type))
      : filteredListings;
      %>

      <% for (let listing of filteredListings) { %>
        <a href="/listings/<%= listing._id %>" class="listing-link">
          <div class="card col">
            <img src="<%= listing.image.url %>" class="card-img-top" alt="listing_image" style="height: 20rem;">
            <div class="card-img-overlay"></div>
            <div class="card-body">
              <p class="card-text">
                <b>
                  <%= listing.title %>
                </b> <br>
                &#8377; <%= listing.price.toLocaleString("en-IN") %> / night <i class="tax-info"> &nbsp; +18% GST</i>
                  <p><i class="fa-solid fa-location-dot"></i>
                    <%= listing.location %> <br>
                      <i class="fa-solid fa-tag"></i>
                      <%= listing.type %>
                  </p>

              </p>
              </p>
            </div>
          </div>
        </a>
        <% } %>
  </div>





  <div class="mt-5 mb-5 card col-6 offset-3">
    <p class="text-center"><b>Continue exploring lakefront homes</b></p>
    <button type="button" class="btn btn-secondary btn-lg">Show more</button>
  </div>


  <section class="founder-ceo-section">
    <div class="founder">
      <img src="https://res.cloudinary.com/dosg3vve9/image/upload/v1702187208/d0ugpkjbuelkahzkrl9r.jpg" alt="Founder"
        class="founder-photo">
      <h3>Abhishek Anand</h3>
      <div class="social-icons">
        <a href="https://www.linkedin.com/in/abhishekanandok" target="_blank"><i class="fab fa-linkedin"></i></a>
        <a href="https://github.com/abhishekanandok" target="_blank"><i class="fab fa-github"></i></a>
        <a href="https://www.instagram.com/abhishekanandok" target="_blank"><i class="fab fa-instagram"></i></a>
        <a href="https://twitter.com/AbhishekAnandok" target="_blank"><i class="fab fa-twitter"></i></a>
      </div>
      
      <p>Founder</p>
      <p>Open Source Contributor | MERN Stack Developer | JavaScript, MongoDB, Express, React, Node | Learned C & Web
        development | C++,DSA,Java,Golang | Learner</p>
    </div>
  </section>



  <script>
    //tax js
    let taxSwitch = document.getElementById("flexSwitchCheckDefault");
    taxSwitch.addEventListener("click", () => {
      let taxInfo = document.getElementsByClassName("tax-info");
      for (info of taxInfo) {
        if (info.style.display != "inline") {
          info.style.display = "inline";
        } else {
          info.style.display = "none";
        }
      }
    });



    //filter button
    const filterButton = document.getElementById('filterButton');
    const filterPopup = document.getElementById('filterPopup');
    const filterContent = document.getElementById('filterContent');
    const submitButton = document.getElementById('submitFilter');

    // Function to fetch location options from the backend
    async function fetchLocations() {
      try {
        const response = await fetch('/locations');
        const locations = await response.json();
        displayLocations(locations);
      } catch (error) {
        console.error('Error fetching locations:', error);
      }
    }

    // Function to display location options with checkboxes in the popup
    function displayLocations(locations) {
      filterContent.innerHTML = ''; // Clear previous options
      locations.forEach(location => {
        const option = document.createElement('div');
        option.classList.add('location-option');

        const checkbox = document.createElement('input');
        checkbox.type = 'checkbox';
        checkbox.value = location;
        checkbox.id = `location_${location.replace(/\s/g, '_')}`; // Create unique ID for each checkbox
        const label = document.createElement('label');
        label.htmlFor = `location_${location.replace(/\s/g, '_')}`;
        label.textContent = location;

        option.appendChild(checkbox);
        option.appendChild(label);

        filterContent.appendChild(option);
      });
    }

    // Function to get selected locations on submit
    function getSelectedLocations() {
      const checkboxes = document.querySelectorAll('.location-option input[type="checkbox"]');
      const selectedLocations = Array.from(checkboxes)
        .filter(checkbox => checkbox.checked)
        .map(checkbox => checkbox.value);
      return selectedLocations;
    }

    // Function to open filter popup
    function openFilterPopup() {
      const buttonRect = filterButton.getBoundingClientRect();
      filterPopup.style.display = 'block';
      filterPopup.style.top = '50%'; // Center vertically
      filterPopup.style.left = '50%'; // Center horizontally
      filterPopup.style.transform = 'translate(-50%, -50%)'; // Adjust position
    }


    // Function to close filter popup
    function closeFilterPopup() {
      filterPopup.style.display = 'none';
    }

    // Event listener for the filter button click
    filterButton.addEventListener('click', () => {
      fetchLocations(); // Fetch location options when the button is clicked
      openFilterPopup();
    });

    // Event listener for the submit button click
    submitButton.addEventListener('click', () => {
      const selectedLocations = getSelectedLocations();
      console.log('Selected locations:', selectedLocations);
      closeFilterPopup(); // Close the popup after submission

      // Construct URL with selected locations as query parameters
      const queryParams = selectedLocations.map(location => `location=${encodeURIComponent(location)}`).join('&');
      const filterURL = `/listings?${queryParams}`;

      // Redirect to the filter page with selected locations as query parameters
      window.location.href = filterURL;
    });


    // Close the popup when clicking outside of it
    document.addEventListener('click', event => {
      if (!filterPopup.contains(event.target) && event.target !== filterButton) {
        closeFilterPopup();
      }
    });




    // Function to send a GET request to filter listings by type
    function filterByType(type) {
      const queryParams = `type=${encodeURIComponent(type)}`;
      const filterURL = `/listings?${queryParams}`;
      window.location.href = filterURL;
    }








  </script>